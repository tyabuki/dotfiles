# .zshrc for mac

EDITOR=/usr/bin/nano

# github token
#HOMEBREW_GITHUB_API_TOKEN="SNIP"
#GITHUB_ACCESS_TOKEN="SNIP"

# git-duet
#GIT_DUET_AUTHORS_FILE=~/.git-authors

# homebrew
PATH=/usr/local/bin:/usr/local/sbin:$PATH
HOMEBREW_VERBOSE=1
HOMEBREW_CURL_VERBOSE=1

# rancher desktop
PATH=$HOME/.rd/bin:$PATH

## mysql-client via homebrew
PATH="/usr/local/opt/mysql-client/bin:$PATH"

# nodebrew
#if type nodebrew > /dev/null 2>&1; then
#   PATH=$HOME/.nodebrew/current/bin:$PATH
#fi

# nvm - v0.39.0
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
export NVM_SYMLINK_CURRENT=true

# rbenv
[[ -d ~/.rbenv  ]] && eval "$(rbenv init -)"

# pyenv + virtual env
# https://github.com/pyenv/pyenv#basic-github-checkout
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
fi
# https://github.com/pyenv/pyenv-virtualenv#installing-with-homebrew-for-macos-users
if which pyenv-virtualenv-init > /dev/null; then
  eval "$(pyenv virtualenv-init -)"
fi

# https://github.com/pyenv/pyenv-virtualenv
# List all available versions
#   pyenv install -l
# create a virtualenv for the Python version used with pyenv
#   pyenv virtualenv 2.7.15 fabric
#   pyenv versions
#   pyenv local fabric

# Go lang via brew
if [ -x "`which go`" ]; then
  export PATH=$PATH:/usr/local/opt/go/libexec/bin
  export GOPATH=$HOME/.go
  export PATH=$PATH:$GOPATH/bin
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"
