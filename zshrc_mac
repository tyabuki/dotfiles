# .zshrc for mac

EDITOR=/usr/bin/nano

# for ARM and Rosetta
# TODO: Rosetta上でnodenvやgoenvを使うならPATHを分けなければならない
alias change_profile='(){echo -e "\033]1337;SetProfile=$1\a"}'
alias arch_arm64="exec arch -arch arm64e /bin/zsh --login"
alias arch_amd64="exec arch -arch x86_64 /bin/zsh --login"
ARCH=$(uname -m)
echo "### arch: $ARCH ###"
if [ $ARCH = "arm64" ]; then
  change_profile arm64
fi

# homebrew
if [ $ARCH = "arm64" ]; then
  if type /opt/homebrew/bin/brew > /dev/null 2>&1; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    HOMEBREW_VERBOSE=1
    HOMEBREW_CURL_VERBOSE=1
  fi
fi
if [ $ARCH = "x86_64" ]; then
  if type /usr/local/bin/brew > /dev/null 2>&1; then
    eval "$(/usr/local/bin/brew shellenv)"
    HOMEBREW_VERBOSE=1
    HOMEBREW_CURL_VERBOSE=1
  fi
fi

# github token
#HOMEBREW_GITHUB_API_TOKEN="SNIP"
#GITHUB_ACCESS_TOKEN="SNIP"

# git-duet
#GIT_DUET_AUTHORS_FILE=~/.git-authors

# rancher desktop
[ -d "$HOME/.rd/bin" ] && PATH=$HOME/.rd/bin:$PATH

## mysql-client via homebrew
[ -d "/usr/local/opt/mysql-client/bin" ] && PATH="/usr/local/opt/mysql-client/bin:$PATH"

# nodenv
if type nodenv > /dev/null 2>&1; then
  eval "$(nodenv init -)"
fi

# nodebrew
#if type nodebrew > /dev/null 2>&1; then
#   PATH=$HOME/.nodebrew/current/bin:$PATH
#fi

# nvm - v0.39.0
[ -d "$HOME/.nvm" ] && export NVM_DIR="$HOME/.nvm"
[ -d "$HOME/.nvm" ] && export NVM_SYMLINK_CURRENT=true
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# rbenv
[[ -d ~/.rbenv  ]] && eval "$(rbenv init -)"

# pyenv + virtual env
# https://github.com/pyenv/pyenv#basic-github-checkout
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
fi
# https://github.com/pyenv/pyenv-virtualenv#installing-with-homebrew-for-macos-users
if which pyenv-virtualenv-init > /dev/null; then
  eval "$(pyenv virtualenv-init -)"
fi

# https://github.com/pyenv/pyenv-virtualenv
# List all available versions
#   pyenv install -l
# create a virtualenv for the Python version used with pyenv
#   pyenv virtualenv 2.7.15 fabric
#   pyenv versions
#   pyenv local fabric

# Go lang via brew
if [ -x "`which go`" ]; then
  export PATH=$PATH:/usr/local/opt/go/libexec/bin
  export GOPATH=$HOME/.go
  export PATH=$PATH:$GOPATH/bin
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"
